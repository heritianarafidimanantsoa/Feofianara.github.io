{"version":3,"sources":["../../src/google-maps-overlay.ts"],"names":["getParameters","setParameters","withParameters","createDeckInstance","destroyDeckInstance","getViewPropsFromOverlay","getViewPropsFromCoordinateTransformer","HIDE_ALL_LAYERS","GL_STATE","depthMask","depthTest","blend","blendFunc","blendEquation","noop","defaultProps","interleaved","GoogleMapsOverlay","constructor","props","setProps","setMap","map","_map","VECTOR","UNINITIALIZED","google","maps","RenderingType","getRenderingType","_overlay","requestRedraw","renderingType","_createOverlay","addListener","Object","assign","_deck","canvas","getCanvas","style","parentElement","parentStyle","pickObject","params","pickMultipleObjects","pickObjects","finalize","isVectorMap","WebGLOverlayView","OverlayView","overlay","onAdd","onContextRestored","_onContextRestored","bind","onDraw","_onDrawVectorInterleaved","_onAdd","_onDrawVectorOverlay","onContextLost","_onContextLost","draw","_onDrawRaster","onRemove","_onRemove","gl","_customRender","deck","animationLoop","_renderFrame","ab","getParameter","onRender","bindBuffer","layerFilter","width","height","left","top","rest","altitude","viewState","repeat","redraw","transformer","isInitialized","_framebuffer","needsRedraw","clearRedrawFlags","viewport","scissor","stencilFunc","_drawLayers","clearCanvas"],"mappings":"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","sourcesContent":["/* global google */\nimport {getParameters, setParameters, withParameters} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport {\n  createDeckInstance,\n  destroyDeckInstance,\n  getViewPropsFromOverlay,\n  getViewPropsFromCoordinateTransformer\n} from './utils';\nimport {Deck} from '@deck.gl/core';\n\nimport type {DeckProps} from '@deck.gl/core';\n\nconst HIDE_ALL_LAYERS = () => false;\nconst GL_STATE = {\n  depthMask: true,\n  depthTest: true,\n  blend: true,\n  blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n  blendEquation: GL.FUNC_ADD\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nconst defaultProps = {\n  interleaved: true\n};\n\nexport type GoogleMapsOverlayProps = DeckProps & {\n  interleaved?: boolean;\n};\n\nexport default class GoogleMapsOverlay {\n  private props: GoogleMapsOverlayProps = {};\n  private _map: google.maps.Map | null = null;\n  private _deck: Deck | null = null;\n  private _overlay: google.maps.WebGLOverlayView | google.maps.OverlayView | null = null;\n\n  constructor(props: GoogleMapsOverlayProps) {\n    this.setProps({...defaultProps, ...props});\n  }\n\n  /* Public API */\n\n  /** Add/remove the overlay from a map. */\n  setMap(map: google.maps.Map | null): void {\n    if (map === this._map) {\n      return;\n    }\n\n    const {VECTOR, UNINITIALIZED} = google.maps.RenderingType;\n    if (this._map) {\n      if (!map && this._map.getRenderingType() === VECTOR && this.props.interleaved) {\n        (this._overlay as google.maps.WebGLOverlayView).requestRedraw();\n      }\n      this._overlay?.setMap(null);\n      this._map = null;\n    }\n    if (map) {\n      this._map = map;\n      const renderingType = map.getRenderingType();\n      if (renderingType !== UNINITIALIZED) {\n        this._createOverlay(map);\n      } else {\n        map.addListener('renderingtype_changed', () => {\n          this._createOverlay(map);\n        });\n      }\n    }\n  }\n\n  /**\n   * Update (partial) props.\n   */\n  setProps(props: Partial<GoogleMapsOverlayProps>): void {\n    Object.assign(this.props, props);\n    if (this._deck) {\n      const canvas = this._deck.getCanvas();\n      if (props.style && canvas?.parentElement) {\n        const parentStyle = canvas.parentElement.style;\n        Object.assign(parentStyle, props.style);\n        props.style = null;\n      }\n      this._deck.setProps(props);\n    }\n  }\n\n  /** Equivalent of `deck.pickObject`. */\n  pickObject(params) {\n    return this._deck && this._deck.pickObject(params);\n  }\n\n  /** Equivalent of `deck.pickObjects`.  */\n  pickMultipleObjects(params) {\n    return this._deck && this._deck.pickMultipleObjects(params);\n  }\n\n  /** Equivalent of `deck.pickMultipleObjects`. */\n  pickObjects(params) {\n    return this._deck && this._deck.pickObjects(params);\n  }\n\n  /** Remove the overlay and release all underlying resources. */\n  finalize() {\n    this.setMap(null);\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  /* Private API */\n  _createOverlay(map: google.maps.Map) {\n    const {interleaved} = this.props;\n    const {VECTOR, UNINITIALIZED} = google.maps.RenderingType;\n    const renderingType = map.getRenderingType();\n    if (renderingType === UNINITIALIZED) {\n      return;\n    }\n\n    const isVectorMap = renderingType === VECTOR && google.maps.WebGLOverlayView;\n    const OverlayView = isVectorMap ? google.maps.WebGLOverlayView : google.maps.OverlayView;\n    const overlay = new OverlayView();\n\n    if (overlay instanceof google.maps.WebGLOverlayView) {\n      if (interleaved) {\n        overlay.onAdd = noop;\n        overlay.onContextRestored = this._onContextRestored.bind(this);\n        overlay.onDraw = this._onDrawVectorInterleaved.bind(this);\n      } else {\n        overlay.onAdd = this._onAdd.bind(this);\n        overlay.onContextRestored = noop;\n        overlay.onDraw = this._onDrawVectorOverlay.bind(this);\n      }\n      overlay.onContextLost = this._onContextLost.bind(this);\n    } else {\n      overlay.onAdd = this._onAdd.bind(this);\n      overlay.draw = this._onDrawRaster.bind(this);\n    }\n    overlay.onRemove = this._onRemove.bind(this);\n\n    this._overlay = overlay;\n    this._overlay.setMap(map);\n  }\n\n  _onAdd() {\n    // @ts-ignore (TS2345) map is defined at this stage\n    this._deck = createDeckInstance(this._map, this._overlay, this._deck, this.props);\n  }\n\n  _onContextRestored({gl}) {\n    if (!this._map || !this._overlay) {\n      return;\n    }\n    const _customRender = () => {\n      if (this._overlay) {\n        (this._overlay as google.maps.WebGLOverlayView).requestRedraw();\n      }\n    };\n    const deck = createDeckInstance(this._map, this._overlay, this._deck, {\n      gl,\n      _customRender,\n      ...this.props\n    });\n    this._deck = deck;\n\n    // By default, animationLoop._renderFrame invokes\n    // animationLoop.onRender. We override this to wrap\n    // in withParameters so we don't modify the GL state\n    // @ts-ignore accessing protected member\n    const {animationLoop} = deck;\n    animationLoop._renderFrame = () => {\n      const ab = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n      withParameters(gl, {}, () => {\n        animationLoop.onRender();\n      });\n      gl.bindBuffer(gl.ARRAY_BUFFER, ab);\n    };\n  }\n\n  _onContextLost() {\n    // TODO this isn't working\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  _onRemove() {\n    this._deck?.setProps({layerFilter: HIDE_ALL_LAYERS});\n  }\n\n  _onDrawRaster() {\n    if (!this._deck || !this._map) {\n      return;\n    }\n    const deck = this._deck;\n\n    const {width, height, left, top, ...rest} = getViewPropsFromOverlay(\n      this._map,\n      this._overlay as google.maps.OverlayView\n    );\n\n    const canvas = deck.getCanvas();\n    if (canvas?.parentElement) {\n      const parentStyle = canvas.parentElement.style;\n      parentStyle.left = `${left}px`;\n      parentStyle.top = `${top}px`;\n    }\n\n    const altitude = 10000;\n    deck.setProps({\n      width,\n      height,\n      viewState: {altitude, repeat: true, ...rest}\n    });\n    // Deck is initialized\n    deck.redraw();\n  }\n\n  // Vector code path\n  _onDrawVectorInterleaved({gl, transformer}) {\n    if (!this._deck || !this._map) {\n      return;\n    }\n\n    const deck = this._deck;\n\n    deck.setProps({\n      ...getViewPropsFromCoordinateTransformer(this._map, transformer),\n\n      // Using external gl context - do not set css size\n      width: null,\n      height: null\n    });\n\n    if (deck.isInitialized) {\n      // As an optimization, some renders are to an separate framebuffer\n      // which we need to pass onto deck\n      const _framebuffer = getParameters(gl, GL.FRAMEBUFFER_BINDING);\n      deck.setProps({_framebuffer});\n\n      // Camera changed, will trigger a map repaint right after this\n      // Clear any change flag triggered by setting viewState so that deck does not request\n      // a second repaint\n      deck.needsRedraw({clearRedrawFlags: true});\n\n      // Workaround for bug in Google maps where viewport state is wrong\n      // TODO remove once fixed\n      setParameters(gl, {\n        viewport: [0, 0, gl.canvas.width, gl.canvas.height],\n        scissor: [0, 0, gl.canvas.width, gl.canvas.height],\n        stencilFunc: [gl.ALWAYS, 0, 255, gl.ALWAYS, 0, 255]\n      });\n\n      withParameters(gl, GL_STATE, () => {\n        deck._drawLayers('google-vector', {\n          clearCanvas: false\n        });\n      });\n    }\n  }\n\n  _onDrawVectorOverlay({transformer}) {\n    if (!this._deck || !this._map) {\n      return;\n    }\n\n    const deck = this._deck;\n\n    deck.setProps({\n      ...getViewPropsFromCoordinateTransformer(this._map, transformer)\n    });\n    deck.redraw();\n  }\n}\n"],"file":"google-maps-overlay.js"}